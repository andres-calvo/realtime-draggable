import { DndContext } from "@dnd-kit/core";
import Head from "next/head";
import { useDraggable } from "@dnd-kit/core";
import { useDragsStore } from "../components/home/useDragStore";
import { animated, useSpring } from "@react-spring/web";
import { useEffect } from "react";

export default function Home() {
  const updateDrags = useDragsStore((state) => state.updateDrags);
  return (
    <main className="min-h-screen w-full bg-slate-200 flex justify-center items-center p-8 relative">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DndContext
        onDragEnd={({ delta }) =>
          updateDrags({ id: "draggable", x: delta.x, y: delta.y })
        }
      >
        <DraggableDiv />
      </DndContext>
    </main>
  );
}

const DraggableDiv = () => {
  const { attributes, listeners, setNodeRef, transform } = useDraggable({
    id: "draggable",
  });
  const drag = useDragsStore((state) => state.drags[0]);
  const style = transform
    ? {
        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,
      }
    : undefined;

    const [props,api] = useSpring(()=>({
      from: { opacity: 1,x:0 ,y:0},
      to: { opacity: 1 ,x:0,y:0},
      reset:false
    }))
  useEffect(()=>{
    const a = setInterval((time)=>{
      api.start({x:Math.random()*500,y:Math.random()*100})

    },1000)
    return ()=>{
      clearInterval(a)
    }
  
  },[])
  return (
    <animated.button
      className="font-bold shadow-sm border bg-slate-500 rounded-md px-6 py-4 relative"
      ref={setNodeRef}
      style={{ ...style, top: drag.y, left: drag.x ,...props}}
      {...listeners}
      {...attributes}
    >
      Hola
    </animated.button>
  );
};

// const Page = () => {
//   const { isOver, setNodeRef } = useDroppable({
//     id: "droppable",
//   });
//   return (
//     <section
//       className="w-[8.5in] h-[11in] border border-gray-300"
//       ref={setNodeRef}
//     >
//       Soy una pagina
//     </section>
//   );
// };
function fireUpdate(callback:()=>void){
  setTimeout(()=>callback(),300)
}